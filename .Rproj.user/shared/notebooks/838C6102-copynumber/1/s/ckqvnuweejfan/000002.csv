"0","'%f%' <- function(x,f) { do.call(what = f,"
"0","                                 args = list(x)) }"
"0","source('util_copynumber.R')"
"0","###### Define proportion of loss/duplication"
"0","p_loss = 0.25"
"0","p_norm = 0.5"
"0","p_dup  = 0.25"
"0","p_vct = c(p_loss,p_norm,p_dup)"
"0","stopifnot(p_loss + p_norm + p_dup  == 1)"
"0","##### Define average length of each state."
"0","L_loss = 20E4"
"0","L_norm = 60E4"
"0","L_dup  = 20E4"
"0","L_vct = c(L_loss, L_norm, L_dup)"
"0","#### Initialise probe grid on chromosome"
"0","L_chromosome = 200E6  ### 200 Megabp genome"
"0","probes = seq(1,L_chromosome, length.out = 30E3) ### 30 Kbp probes ,aka one probe per 6Kbp  "
"0","# length(probes)"
"0","# ?seq"
"0","probeidx <- probes %f% as.integer"
"0","probes[1:5]"
"1","[1]"
"1","     1.000"
"1","  6667.889"
"1"," 13334.778"
"1"," 20001.667"
"1"," 26668.555"
"1","
"
"0","##### Assign copynumber to probes"
"0","system.time({"
"0","  cpnum_act = assign_copynumber(probeidx,p_vct,L_vct, guess = 1.0)"
"0","})"
"1","   user "
"1"," system "
"1","elapsed "
"1","
"
"1","  1.280 "
"1","  0.060 "
"1","  1.342 "
"1","
"
"0","# cpnum = segEND"
"0","log_cpnum_act =log_convert(cpnum_act)"
"0","sigma = 0.2"
"0","noisy_log_cpnum_act = noisy( log_cpnum_act, sigma = 0.2, relative = F) #### Absolute error is used here"
