"0","##### Generate the actual data and save to 'res'"
"0","chrome_idx = 1"
"0","idxs = 1:length(log_cpnum_act)"
"0","for (i in 1:length(sigmas)){"
"0","  sigma = sigmas[i]"
"0","  noisy_log_cpnum_act = noisy( log_cpnum_act, sigma =sigma, relative = F) #### Absolute error is used here"
"0","  vct = noisy_log_cpnum_act[idxs]"
"0","  df  = data.frame(chromosome = chrome_idx,"
"0","                   vct,"
"0","                   position = probeidx[idxs])"
"0","  "
"0","  #### Run DNACopy for segmentation"
"0","  CNA.object <- CNA(cbind(vct),"
"0","                    df$chromosome, df$position,"
"0","                    data.type=""logratio"",sampleid=sprintf(""simulated sigma=%.3f"", sigma))"
"0","  smoothed.CNA.object <- smooth.CNA(CNA.object)"
"0","  segment.smoothed.CNA.object <- segment(smoothed.CNA.object, verbose=1)"
"0","  res[[i]] <- segment.smoothed.CNA.object"
"0","}"
"1","Analyzing: simulated.sigma.0.200 
"
"1","Analyzing: simulated.sigma.0.319 
"
"1","Analyzing: simulated.sigma.0.493 
"
"1","Analyzing: simulated.sigma.0.751 
"
"1","Analyzing: simulated.sigma.1.131 
"
"1","Analyzing: simulated.sigma.1.691 
"
"0","norm.res <- res "
"0","save(norm.res, file ='normal.dat')"
