"0","# for (i in 1:5){"
"0","thres2PR <- function(thres, fitted,model){"
"0","        fitted_binary = fitted < thres"
"0","        model_binary = model == -1"
"0","        stats = crossref(fitted_binary, model_binary, logical = F)"
"0","      # print((stats$TP + stats$FP) == 0)"
"0","        if ((stats$TP + stats$FP) == 0){"
"0","          return(NULL)"
"0","        }else{"
"0","        P = stats$TP /(stats$TP + stats$FP)"
"0","        R = stats$TP /(stats$TP + stats$FN)"
"0","        return(list(P=P,R=R))"
"0","        }"
"0","        "
"0","    }"
"0","# thres = -.5"
"0","load('normal.dat')"
"0","res = norm.res"
"0","mdl =  log_cpnum_act"
"0","thres_vct = seq(-.0, -1.5 , length.out =  25 )"
"0","xss = vector('list',length = length(res))"
"0","yss = vector('list',length = length(res))"
"0","# xss = vector('list',length = res)"
"0","for (ri in 1:length(res)){"
"0","  df = res[[ri]]"
"0","  fitted = extract_fitted(df)"
"0","  xs = thres_vct *NA"
"0","  ys = xs * NA"
"0","  for ( ti  in 1:length(thres_vct) ){"
"0","    thres = thres_vct[ti]"
"0","    out = thres2PR(thres,fitted, mdl)"
"0","    if (is.null(out)){"
"0","      break"
"0","    }"
"0","    xs[ti] = out$P"
"0","    ys[ti] = out$R"
"0","  }"
"0","  print(paste(out$P,out$R))"
"0","  xss[[ri]]=xs"
"0","  yss[[ri]]=ys"
"0","}"
"1","character(0)
"
"1","character(0)
"
"1","character(0)
"
"1","[1]"
"1"," ""1 0.00170842824601367"""
"1","
"
"1","[1]"
"1"," ""1 0.0335990888382688"""
"1","
"
"1","[1]"
"1"," ""0.909090909090909 0.0825740318906606"""
"1","
"
"0","prelst = do.call(cbind,args = xss)"
"0","reclst = do.call(cbind,args = yss)"
